<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>David Fox</title>
    <description>Software Developer, Musician, DJ, Artist
</description>
    <link>http://dfox.io/</link>
    <atom:link href="http://dfox.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 11 Jan 2017 13:42:43 -0500</pubDate>
    <lastBuildDate>Wed, 11 Jan 2017 13:42:43 -0500</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Make a Website with Jekyll, Github, and Cloudflare</title>
        <description>&lt;p&gt;After launching this site, I had a lot of friends, with varying levels
of technical ability, ask me how I set it up and where it was
hosted. Yesterday, I launched another site,
&lt;a href=&quot;https://graybox-testing.org&quot;&gt;graybox-testing.org&lt;/a&gt; using the same
software and services, and I wrote down the steps I used to make
it. Hopefully this will be helpful to others who want a freely hosted,
easy to manage site.&lt;/p&gt;

&lt;p&gt;I should mention that I did not come up with this myself. My coworker,
&lt;a href=&quot;https://neo-geek.net&quot;&gt;Scott Doxey&lt;/a&gt; showed me how he hosted his site
and helped me get set up. So all credit goes to him.&lt;/p&gt;

&lt;p&gt;I’ll try and be as clear as I can for those non-developers out
there. If you’re technically inclined you should be able to figure
most of this stuff out. If you want a simpler solution, I’d suggest
Wordpress or Squarespace or some other easy to use service.&lt;/p&gt;

&lt;h2 id=&quot;software-and-services&quot;&gt;Software and Services&lt;/h2&gt;

&lt;p&gt;First we’ll cover the software and services I used, so you can get
familar with them.&lt;/p&gt;

&lt;h3 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; is a static site generator. It takes
content you write in
&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; and generates
a complete website from it. Unlike content management systems like
&lt;a href=&quot;https://wordpress.com&quot;&gt;Wordpress&lt;/a&gt; or
&lt;a href=&quot;https://www.drupal.org&quot;&gt;Drupal&lt;/a&gt;, it doesn’t generate web pages on the
fly from a database. Instead, it just converts the Markdown documents
into static HTML files, which you can serve from any basic web
server. With plugins, themes, and other features, it gives you the
same functionality as a CMS, but without needing all the
infrastructure. Most importantly, Jekyll is the technology behind
&lt;a href=&quot;https://pages.github.com&quot;&gt;Github Pages&lt;/a&gt;, which is how this site is
served.&lt;/p&gt;

&lt;h3 id=&quot;git&quot;&gt;Git&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt; is
&lt;a href=&quot;https://en.wikipedia.org/wiki/Version_control&quot;&gt;version control&lt;/a&gt;
software. It saves every change you make to a set of files over
time. Software developers use it to manage source code, but it can
really manage any kind of file. It will manage the content of the
website and make it easy to publish new updates. Because it stores
every change to the site, it can be used to undo any change all the
way back to the beginning of your site.&lt;/p&gt;

&lt;h3 id=&quot;github&quot;&gt;Github&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com&quot;&gt;Github&lt;/a&gt; is a source code management platform
built on &lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt;. It will store a copy of your site
content and Github will use Jekyll to generate the site from them.&lt;/p&gt;

&lt;h3 id=&quot;cloudflare&quot;&gt;Cloudflare&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;Cloudflare&lt;/a&gt; is a content delivery network
with security features like
&lt;a href=&quot;https://en.wikipedia.org/wiki/Denial-of-service_attack&quot;&gt;DDOS&lt;/a&gt;
protection,
&lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer_Security&quot;&gt;SSL&lt;/a&gt; and
more. For large sites, these features are a nessesity on todays
internet, but the company also provides them free of charge for sites
with minimal traffic.&lt;/p&gt;

&lt;h3 id=&quot;domain-registrar&quot;&gt;Domain Registrar&lt;/h3&gt;

&lt;p&gt;If you want a custom domain, you’ll need to register it
somewhere. There are a ton of services available, just
&lt;a href=&quot;http://lmgtfy.com/?q=domain+registration&quot;&gt;google it&lt;/a&gt;. I used
&lt;a href=&quot;https://www.name.com&quot;&gt;name.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;Follow these steps and you’ll have a website up in less than 1/2 hour.&lt;/p&gt;

&lt;h3 id=&quot;create-an-account-on-github&quot;&gt;1) Create an account on Github&lt;/h3&gt;

&lt;p&gt;Go to the &lt;a href=&quot;https://github.com/join&quot;&gt;Github signup page&lt;/a&gt; and create an
account. &lt;/p&gt;

&lt;h3 id=&quot;make-a-new-repository&quot;&gt;2) Make a new repository&lt;/h3&gt;

&lt;p&gt;After you create your account, add a new repository. This is on the
bottom right of your home page on github:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/article_images/2017-01-10-make-a-website/new-repository.png&quot; alt=&quot;Adding a new repository&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Call the new repository username.github.io, where “username” is
replaced with the username you used to sign up for Github. If you don’t
have your own domain name, it will be served from this
&lt;a href=&quot;https://en.wikipedia.org/wiki/Subdomain&quot;&gt;subdomain&lt;/a&gt; of the the
github.io domain. For example, I called my repository
&lt;a href=&quot;https://github.com/dfox/dfox.github.io&quot;&gt;dfox.github.io&lt;/a&gt; because my username is dfox.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/article_images/2017-01-10-make-a-website/creating-the-repository.png&quot; alt=&quot;Creating the repository&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;set-source-branch&quot;&gt;3) Set source branch&lt;/h3&gt;

&lt;p&gt;Now, from your repository page, go to “Settings”. Scroll down to the
GitHub Pages section and select “master branch” as the source
branch. This will make it easier to publish. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/article_images/2017-01-10-make-a-website/set-branch.png&quot; alt=&quot;Setting the source branch&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;download-homebrew&quot;&gt;4) Download Homebrew&lt;/h3&gt;

&lt;p&gt;If you’re on OSX, you can just install &lt;a href=&quot;http://brew.sh&quot;&gt;Homebrew&lt;/a&gt;. It
will make it really easy to install the rest of the things you’ll need
and give you easy access to a ton of other software. If you are on
Windows, you’ll most likely need to install these things separately. I
haven’t used Windows in many years so I don’t know the steps for that
platform.&lt;/p&gt;

&lt;h3 id=&quot;install-git&quot;&gt;5) Install Git&lt;/h3&gt;

&lt;p&gt;If you are a developer, you most likely already have
&lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt;. If not, you’ll need to install it. With
homebrew it’s just &lt;code&gt;$ brew install git&lt;/code&gt;. How to use Git is a huge topic
and I’m not going to cover it. There are
&lt;a href=&quot;https://git-scm.com/doc&quot;&gt;lots of resources&lt;/a&gt; available to help you
there. If you are not comfortable on the command line, there are
&lt;a href=&quot;https://git-scm.com/downloads/guis&quot;&gt;lots of GUI clients&lt;/a&gt; available.&lt;/p&gt;

&lt;h3 id=&quot;install-jekyll&quot;&gt;6) Install Jekyll&lt;/h3&gt;

&lt;p&gt;Again with homebrew, you can just run &lt;code&gt;$ brew install
jekyll&lt;/code&gt;. Otherwise you’ll need to follow the instructions on
&lt;a href=&quot;http://jekyllrb.com&quot;&gt;the Jekyll site&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;clone-your-repo&quot;&gt;7) Clone your repo&lt;/h3&gt;

&lt;p&gt;Now you will clone your repo so you can work on it locally. What this
does is make a copy of the repository on your computer. You will make
changes to the site and save them locally, then you can push your
change up to Github to publish the site.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/article_images/2017-01-10-make-a-website/cloning.png&quot; alt=&quot;Cloning the repo&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;initialize-the-jekyll-site&quot;&gt;8) Initialize the Jekyll site&lt;/h3&gt;

&lt;p&gt;In the command line, cd into the parent directory of the repository
you just cloned and run:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;jekyll new username.github.io --force&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note you want to replace “&lt;em&gt;username.github.io&lt;/em&gt;” with the name of the
repository directory.&lt;/p&gt;

&lt;h3 id=&quot;push-your-new-website&quot;&gt;9) Push your new website&lt;/h3&gt;

&lt;p&gt;Now you can add the files Jekyll created to your repository and push
the changes to Github:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cd username.github.io
git add .
git commit -a -m &#39;Initial site&#39;
git push origin master
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;your-site-is-live&quot;&gt;Your Site is Live&lt;/h2&gt;

&lt;p&gt;Now your site is live!&lt;/p&gt;

&lt;p&gt;You should be able to go to the URL http://username.github.io and see
the default Jekyll site now (again, replace “username” with your
github username).&lt;/p&gt;

&lt;h2 id=&quot;setting-up-your-custom-domain&quot;&gt;Setting Up Your Custom Domain&lt;/h2&gt;

&lt;p&gt;This next part will make it so your custom domain name points to your
site. We’re going to use Cloudflare to handle the DNS and cache your
site so it’s really fast. &lt;/p&gt;

&lt;h3 id=&quot;make-a-cloudflare-account&quot;&gt;1) Make a Cloudflare account&lt;/h3&gt;

&lt;p&gt;Go to &lt;a href=&quot;https://www.cloudflare.com/a/sign-up&quot;&gt;Cloudflare&lt;/a&gt; and make an
account.&lt;/p&gt;

&lt;h3 id=&quot;set-up-dns&quot;&gt;2) Set up DNS&lt;/h3&gt;

&lt;p&gt;Go to your account on Cloudflare and click on “+ Add Site” at the
top. Enter your domain into the box and click “Begin Scan”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/article_images/2017-01-10-make-a-website/add-site.png&quot; alt=&quot;Adding your site&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;add-dns-records&quot;&gt;3) Add DNS Records&lt;/h3&gt;

&lt;p&gt;Now, you’ll need to set up CNAME records for the site. You need to add
at least a CNAME record with the name of your domain and a value of
“username.github.io” where “username” is the username you used for
Github. You can see how I configured my settings here:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/article_images/2017-01-10-make-a-website/dns-records.png&quot; alt=&quot;Adding your site&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;add-a-cname-file-to-github&quot;&gt;4) Add a CNAME File to Github&lt;/h3&gt;

&lt;p&gt;Now, in the repository directory for your website, create a file
called “CNAME” and in it, just put your domain name. I put
“dfox.io”. Then just push it up to Github with &lt;code&gt;git push origin master&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;That’s it! In a few minutes you should now be able to type your domain
and see the default Jekyll site you set up.&lt;/p&gt;

&lt;p&gt;Next, you’ll want to start editing your site and adding content. See
the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll site&lt;/a&gt; for how to do that. There is
also a pretty good site with templates, plugins, themes and more at
&lt;a href=&quot;http://jekyll.tips&quot;&gt;Jekyll Tips&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 10 Jan 2017 20:02:00 -0500</pubDate>
        <link>http://dfox.io/blog/2017/01/10/make-a-website.html</link>
        <guid isPermaLink="true">http://dfox.io/blog/2017/01/10/make-a-website.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Nightwatch and JUnit HTTP</title>
        <description>&lt;p&gt;I’ve been working on a greybox testing strategy for my company,
Cantina for a while now, and I’ve written the first versions of the
libraries to support it, one for the &lt;a href=&quot;http://junit.org/junit4/&quot;&gt;JUnit&lt;/a&gt;
backend, and one for the &lt;a href=&quot;http://nightwatchjs.org&quot;&gt;Nightwatch&lt;/a&gt;
frontend. You can find them here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dfox/junit-http&quot;&gt;JUnit HTTP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dfox/nightwatch-js-remote-assert&quot;&gt;Nightwatch Remote Assert&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ll be publishing some articles about how I arrived at this strategy
and how to use it in the near future. Unit then, you can check out the
in-progress
&lt;a href=&quot;http://field-guide.cantina.co.s3-website-us-east-1.amazonaws.com/#dev-process&quot;&gt;field guide&lt;/a&gt;,
which contains an overview of my development process which covers testing.&lt;/p&gt;

&lt;p&gt;UPDATE: I’m leaving Cantina on January 17th, 2017. They have
graciously offered to assign copyright to me for the libraries and I
have purchased the domain, graybox-testing.org to host resources
around this style of testing. I’ve updated the links above to point to
my personal repo.&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Dec 2016 13:05:00 -0500</pubDate>
        <link>http://dfox.io/blog/2016/12/12/junit-http-nightwatch.html</link>
        <guid isPermaLink="true">http://dfox.io/blog/2016/12/12/junit-http-nightwatch.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Homemade V8</title>
        <description>&lt;p&gt;I really like V8 juice. A lot. I drink it almost every day. I also try
to make all my own food, so naturally I decided to try some
taste-alike recipes. Almost immediately I found out that V8 is
actually cooked, and to make it you essentially make a soup. Also, a
lot of the recipes used things like a food mill or a sieve to filter
the juice from the roughage. I didn’t like either of these aspects of
the recipes because I wanted a raw product with all of the fiber and
goodness. So essentially I made a smoothy with the V8 veggies.&lt;/p&gt;

&lt;p&gt;The ingredients on a V8 can are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tomato Juice from Concentrate (Water, Tomato Paste)&lt;/li&gt;
  &lt;li&gt;Reconstituted Vegetable Juice Blend (Water and Concentrated Juices of Carrots, Celery, Beets, Parsley, Lettuce, Watercress, Spinach)&lt;/li&gt;
  &lt;li&gt;Lemon Juice from Concentrate (Water, Lemon Juice Concentrate)&lt;/li&gt;
  &lt;li&gt;Salt&lt;/li&gt;
  &lt;li&gt;Natural Flavoring&lt;/li&gt;
  &lt;li&gt;Vitamin C (Ascorbic Acid)&lt;/li&gt;
  &lt;li&gt;Citric Acid&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, it’s very much “from concentrate” and definitely not
organic. It seemed like an easy task to blend up the ingredients in
the Vitamix and tweak to taste. After looking at some other recipes,
this is what I came up with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3 tomatoes&lt;/li&gt;
  &lt;li&gt;1 carrot&lt;/li&gt;
  &lt;li&gt;2 celery sticks&lt;/li&gt;
  &lt;li&gt;1/4 of a small beet&lt;/li&gt;
  &lt;li&gt;A handful each of:
    &lt;ul&gt;
      &lt;li&gt;Parsley&lt;/li&gt;
      &lt;li&gt;Romaine lettuce&lt;/li&gt;
      &lt;li&gt;Watercress&lt;/li&gt;
      &lt;li&gt;Spinach&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Juice from 1/2 lemon&lt;/li&gt;
  &lt;li&gt;A few dashes of Worcestershire&lt;/li&gt;
  &lt;li&gt;Salt and pepper to taste&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I went easy on the watercress and parsley, as those offer up a lot of
flavor. You can add a bunch of lettuce and spinach and not change the
taste too much. The result was really, really tasty. Not exactly like
V8, but close, and so much more “fresh” tasting.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/article_images/2016-11-30-v8/pitcher.jpg&quot; alt=&quot;Homemade V8&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 14:48:00 -0500</pubDate>
        <link>http://dfox.io/blog/2016/11/30/v8.html</link>
        <guid isPermaLink="true">http://dfox.io/blog/2016/11/30/v8.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Music</title>
        <description>&lt;p&gt;I DJ and produce electronic music as a professional hobby. I’ve been a resident DJ at
&lt;a href=&quot;http://elements-dnb.com&quot;&gt;Elements&lt;/a&gt; for about 5 years now and perform around New England at various events. From around 2007-2012, I was a member of the group,
The Statesmen. We had quite a few releases and also a number of unreleased tracks
that never quite made it to a label. I’ve posted some of my music and mixes &lt;a href=&quot;/music/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Nov 2016 17:38:00 -0500</pubDate>
        <link>http://dfox.io/blog/2016/11/22/music.html</link>
        <guid isPermaLink="true">http://dfox.io/blog/2016/11/22/music.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Sculpture I Did Once Upon a Time</title>
        <description>&lt;p&gt;I actually have a degree in Fine Arts from &lt;a href=&quot;http://www.massart.edu&quot;&gt;Mass Art&lt;/a&gt;.
When I went there I concentrated on sculpture, particularly figurative
work of the creepy variety.
&lt;a href=&quot;/sculpture/&quot;&gt;This is a gallery&lt;/a&gt; of some of the work I did
there.&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Nov 2016 13:44:00 -0500</pubDate>
        <link>http://dfox.io/blog/2016/11/22/sculpture.html</link>
        <guid isPermaLink="true">http://dfox.io/blog/2016/11/22/sculpture.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
